// <auto-generated />
using System;
using Biotronic.Poultry.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Biotronic.Poultry.Data.Migrations
{
    [DbContext(typeof(PoultryDbContext))]
    [Migration("20210405100917_Revision_0")]
    partial class Revision_0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.Brood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BroodNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("Ended")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FemaleCount")
                        .HasColumnType("int");

                    b.Property<int?>("HatcheryId")
                        .HasColumnType("int");

                    b.Property<int?>("HouseId")
                        .HasColumnType("int");

                    b.Property<int?>("HybridId")
                        .HasColumnType("int");

                    b.Property<int?>("MaleCount")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Received")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VeterinarianId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HatcheryId");

                    b.HasIndex("HouseId");

                    b.HasIndex("HybridId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("VeterinarianId");

                    b.ToTable("Broods");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.BroodComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BroodId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BroodId");

                    b.HasIndex("UserId");

                    b.ToTable("BroodComments");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.BroodDelivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnimalsDelivered")
                        .HasColumnType("int");

                    b.Property<int?>("BroodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FecesSampleSent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeedEmpty")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinalFeedStarted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SelfReportSent")
                        .HasColumnType("datetime2");

                    b.Property<double?>("WeightDeliveredKg")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BroodId");

                    b.ToTable("BroodDeliveries");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.BroodDisinfection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("BroodId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Treatment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("BroodId");

                    b.ToTable("BroodDisinfections");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.BroodFeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AmountKg")
                        .HasColumnType("float");

                    b.Property<int?>("BroodId")
                        .HasColumnType("int");

                    b.Property<double?>("CostTotal")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("SiloId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("BroodId");

                    b.HasIndex("SiloId");

                    b.ToTable("BroodFeeds");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.BroodTreatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BroodId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Illness")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Treatment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("BroodId");

                    b.ToTable("BroodTreatments");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.DayComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DayId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("UserId");

                    b.ToTable("DayComments");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.DayRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("BroodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("DeadFemales")
                        .HasColumnType("int");

                    b.Property<int?>("DeadMales")
                        .HasColumnType("int");

                    b.Property<double?>("FeedUsageKg")
                        .HasColumnType("float");

                    b.Property<double?>("HumidityPct")
                        .HasColumnType("float");

                    b.Property<double?>("Temperature")
                        .HasColumnType("float");

                    b.Property<double?>("WaterUsageLiters")
                        .HasColumnType("float");

                    b.Property<double?>("WeightFemalesKg")
                        .HasColumnType("float");

                    b.Property<double?>("WeightMalesKg")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BroodId");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.DeliveryComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("UserId");

                    b.ToTable("DeliveryComments");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Farms");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.FarmAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Access")
                        .HasColumnType("int");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("UserId");

                    b.ToTable("FarmAccess");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.Hatchery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Hatcheries");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.Hybrid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Hybrids");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.Silo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("HouseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.ToTable("Silos");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.Veterinarian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DbChanged")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DbCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Veterinarians");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.Brood", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.Hatchery", "Hatchery")
                        .WithMany()
                        .HasForeignKey("HatcheryId");

                    b.HasOne("Biotronic.Poultry.Data.Model.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseId");

                    b.HasOne("Biotronic.Poultry.Data.Model.Hybrid", "Hybrid")
                        .WithMany()
                        .HasForeignKey("HybridId");

                    b.HasOne("Biotronic.Poultry.Data.Model.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.HasOne("Biotronic.Poultry.Data.Model.Veterinarian", "Veterinarian")
                        .WithMany()
                        .HasForeignKey("VeterinarianId");

                    b.Navigation("Hatchery");

                    b.Navigation("House");

                    b.Navigation("Hybrid");

                    b.Navigation("Owner");

                    b.Navigation("Veterinarian");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.BroodComment", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.Brood", "Brood")
                        .WithMany("Comments")
                        .HasForeignKey("BroodId");

                    b.HasOne("Biotronic.Poultry.Data.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Brood");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.BroodDelivery", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.Brood", "Brood")
                        .WithMany("Deliveries")
                        .HasForeignKey("BroodId");

                    b.Navigation("Brood");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.BroodDisinfection", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.Brood", "Brood")
                        .WithMany("Disinfections")
                        .HasForeignKey("BroodId");

                    b.Navigation("Brood");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.BroodFeed", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.Brood", "Brood")
                        .WithMany("Feeds")
                        .HasForeignKey("BroodId");

                    b.HasOne("Biotronic.Poultry.Data.Model.Silo", "Silo")
                        .WithMany()
                        .HasForeignKey("SiloId");

                    b.Navigation("Brood");

                    b.Navigation("Silo");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.BroodTreatment", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.Brood", "Brood")
                        .WithMany("Treatments")
                        .HasForeignKey("BroodId");

                    b.Navigation("Brood");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.DayComment", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.DayRecord", "Day")
                        .WithMany("Comments")
                        .HasForeignKey("DayId");

                    b.HasOne("Biotronic.Poultry.Data.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Day");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.DayRecord", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.Brood", "Brood")
                        .WithMany("Days")
                        .HasForeignKey("BroodId");

                    b.Navigation("Brood");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.DeliveryComment", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.BroodDelivery", "Delivery")
                        .WithMany("Comments")
                        .HasForeignKey("DeliveryId");

                    b.HasOne("Biotronic.Poultry.Data.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Delivery");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.Farm", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.User", null)
                        .WithMany("Farms")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.FarmAccess", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmId");

                    b.HasOne("Biotronic.Poultry.Data.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Farm");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.House", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmId");

                    b.HasOne("Biotronic.Poultry.Data.Model.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.Navigation("Farm");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.Silo", b =>
                {
                    b.HasOne("Biotronic.Poultry.Data.Model.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseId");

                    b.Navigation("House");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.Brood", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Days");

                    b.Navigation("Deliveries");

                    b.Navigation("Disinfections");

                    b.Navigation("Feeds");

                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.BroodDelivery", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.DayRecord", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Biotronic.Poultry.Data.Model.User", b =>
                {
                    b.Navigation("Farms");
                });
#pragma warning restore 612, 618
        }
    }
}
